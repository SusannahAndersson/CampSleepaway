// <auto-generated />
using System;
using CampSleepaway.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CampSleepaway.Data.Migrations
{
    [DbContext(typeof(CampSleepawayContext))]
    [Migration("20220301202228_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CampSleepaway.Domain.Cabin", b =>
                {
                    b.Property<int>("CabinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CabinId"), 1L, 1);

                    b.Property<int>("CounselorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CabinId");

                    b.ToTable("Cabins");

                    b.HasData(
                        new
                        {
                            CabinId = 1,
                            CounselorId = 1,
                            Name = "Sunny Woods cabin"
                        },
                        new
                        {
                            CabinId = 2,
                            CounselorId = 2,
                            Name = "Happy Raccoon cabin"
                        },
                        new
                        {
                            CabinId = 3,
                            CounselorId = 3,
                            Name = "Aqua Wilderness cabin"
                        },
                        new
                        {
                            CabinId = 4,
                            CounselorId = 4,
                            Name = "Green Country cabin"
                        },
                        new
                        {
                            CabinId = 5,
                            CounselorId = 5,
                            Name = "Grey Meadows cabin"
                        },
                        new
                        {
                            CabinId = 6,
                            CounselorId = 0,
                            Name = "Blue Outback cabin"
                        });
                });

            modelBuilder.Entity("CampSleepaway.Domain.CabinCamper", b =>
                {
                    b.Property<int>("CabinId")
                        .HasColumnType("int");

                    b.Property<int>("CamperId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CabinId", "CamperId");

                    b.HasIndex("CamperId");

                    b.ToTable("CabinCamper");

                    b.HasData(
                        new
                        {
                            CabinId = 1,
                            CamperId = 1,
                            EnterDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CabinId = 2,
                            CamperId = 2,
                            EnterDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CabinId = 3,
                            CamperId = 3,
                            EnterDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CabinId = 4,
                            CamperId = 4,
                            EnterDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CabinId = 5,
                            CamperId = 5,
                            EnterDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CabinId = 1,
                            CamperId = 6,
                            EnterDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CabinId = 2,
                            CamperId = 7,
                            EnterDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CampSleepaway.Domain.CabinCounselor", b =>
                {
                    b.Property<int>("CabinId")
                        .HasColumnType("int");

                    b.Property<int>("CounselorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CabinId", "CounselorId");

                    b.HasIndex("CounselorId");

                    b.ToTable("CabinCounselor");

                    b.HasData(
                        new
                        {
                            CabinId = 1,
                            CounselorId = 1,
                            EnterDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CabinId = 2,
                            CounselorId = 2,
                            EnterDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CabinId = 3,
                            CounselorId = 3,
                            EnterDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CabinId = 4,
                            CounselorId = 4,
                            EnterDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CabinId = 5,
                            CounselorId = 5,
                            EnterDate = new DateTime(2021, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CampSleepaway.Domain.Camper", b =>
                {
                    b.Property<int>("CamperId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CamperId"), 1L, 1);

                    b.Property<string>("Allergies")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CamperId");

                    b.ToTable("Campers");

                    b.HasData(
                        new
                        {
                            CamperId = 1,
                            Allergies = "null",
                            FirstName = "Jane",
                            Surname = "Doe"
                        },
                        new
                        {
                            CamperId = 2,
                            Allergies = "Peanuts",
                            FirstName = "John",
                            Surname = "Doe"
                        },
                        new
                        {
                            CamperId = 3,
                            Allergies = "null",
                            FirstName = "Denys",
                            Surname = "Demetr"
                        },
                        new
                        {
                            CamperId = 4,
                            Allergies = "null",
                            FirstName = "Queenie",
                            Surname = "Penuzzi"
                        },
                        new
                        {
                            CamperId = 5,
                            Allergies = "Dogs",
                            FirstName = "Grove",
                            Surname = "Smith"
                        },
                        new
                        {
                            CamperId = 6,
                            Allergies = "Cats",
                            FirstName = "Emye",
                            Surname = "Overall"
                        },
                        new
                        {
                            CamperId = 7,
                            Allergies = "null",
                            FirstName = "Wilton",
                            Surname = "Florence"
                        },
                        new
                        {
                            CamperId = 8,
                            Allergies = "Carrots",
                            FirstName = "Pamela",
                            Surname = "Samples"
                        },
                        new
                        {
                            CamperId = 9,
                            Allergies = "null",
                            FirstName = "Percy",
                            Surname = "Smallcomb"
                        },
                        new
                        {
                            CamperId = 10,
                            Allergies = "Sunlight",
                            FirstName = "Essy",
                            Surname = "Piddocke"
                        },
                        new
                        {
                            CamperId = 11,
                            Allergies = "Gluten",
                            FirstName = "Hannah",
                            Surname = "Burnyate"
                        },
                        new
                        {
                            CamperId = 12,
                            Allergies = "null",
                            FirstName = "Alia",
                            Surname = "Wait"
                        },
                        new
                        {
                            CamperId = 13,
                            Allergies = "null",
                            FirstName = "Eartha",
                            Surname = "Florence"
                        },
                        new
                        {
                            CamperId = 14,
                            Allergies = "Electricity",
                            FirstName = "Tybi",
                            Surname = "Banbridge"
                        },
                        new
                        {
                            CamperId = 15,
                            Allergies = "null",
                            FirstName = "Cecily",
                            Surname = "Wavell"
                        },
                        new
                        {
                            CamperId = 16,
                            Allergies = "null",
                            FirstName = "Welch",
                            Surname = "Godspede"
                        },
                        new
                        {
                            CamperId = 17,
                            Allergies = "null",
                            FirstName = "Arlene",
                            Surname = "Wavell"
                        },
                        new
                        {
                            CamperId = 18,
                            Allergies = "null",
                            FirstName = "Obediah",
                            Surname = "Fitzpatrick"
                        });
                });

            modelBuilder.Entity("CampSleepaway.Domain.CamperNextOfKin", b =>
                {
                    b.Property<int>("CamperId")
                        .HasColumnType("int");

                    b.Property<int>("NextOfKinId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EnterDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("CamperId", "NextOfKinId");

                    b.HasIndex("NextOfKinId");

                    b.ToTable("CamperNextOfKin");

                    b.HasData(
                        new
                        {
                            CamperId = 1,
                            NextOfKinId = 1,
                            EnterDate = new DateTime(2021, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CamperId = 2,
                            NextOfKinId = 2,
                            EnterDate = new DateTime(2021, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CamperId = 3,
                            NextOfKinId = 3,
                            EnterDate = new DateTime(2021, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            CamperId = 4,
                            NextOfKinId = 4,
                            EnterDate = new DateTime(2021, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ExitDate = new DateTime(2021, 5, 2, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("CampSleepaway.Domain.Counselor", b =>
                {
                    b.Property<int>("CounselorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CounselorId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("YearsActive")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CounselorId");

                    b.ToTable("Counselors");

                    b.HasData(
                        new
                        {
                            CounselorId = 1,
                            FirstName = "Kym",
                            Surname = "MacIlurick",
                            YearsActive = "4"
                        },
                        new
                        {
                            CounselorId = 2,
                            FirstName = "Felice",
                            Surname = "Balharry"
                        },
                        new
                        {
                            CounselorId = 3,
                            FirstName = "Morgan",
                            Surname = "Rex"
                        },
                        new
                        {
                            CounselorId = 4,
                            FirstName = "Marion",
                            Surname = "Currum"
                        },
                        new
                        {
                            CounselorId = 5,
                            FirstName = "Cletus",
                            Surname = "Cholomin"
                        });
                });

            modelBuilder.Entity("CampSleepaway.Domain.NextOfKin", b =>
                {
                    b.Property<int>("NextOfKinId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NextOfKinId"), 1L, 1);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SocialSecurityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NextOfKinId");

                    b.ToTable("NextOfKins");

                    b.HasData(
                        new
                        {
                            NextOfKinId = 1,
                            FirstName = "Andy",
                            Surname = "Belmont"
                        },
                        new
                        {
                            NextOfKinId = 2,
                            FirstName = "Jaqueline",
                            Surname = "Doe"
                        },
                        new
                        {
                            NextOfKinId = 3,
                            FirstName = "Jack",
                            Surname = "Doe"
                        },
                        new
                        {
                            NextOfKinId = 4,
                            FirstName = "Genia",
                            Surname = "Andresser"
                        },
                        new
                        {
                            NextOfKinId = 5,
                            FirstName = "Minny",
                            Surname = "Roderigo"
                        });
                });

            modelBuilder.Entity("CampSleepaway.Domain.CabinCamper", b =>
                {
                    b.HasOne("CampSleepaway.Domain.Cabin", null)
                        .WithMany()
                        .HasForeignKey("CabinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampSleepaway.Domain.Camper", null)
                        .WithMany()
                        .HasForeignKey("CamperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CampSleepaway.Domain.CabinCounselor", b =>
                {
                    b.HasOne("CampSleepaway.Domain.Cabin", null)
                        .WithMany()
                        .HasForeignKey("CabinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampSleepaway.Domain.Counselor", null)
                        .WithMany()
                        .HasForeignKey("CounselorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CampSleepaway.Domain.CamperNextOfKin", b =>
                {
                    b.HasOne("CampSleepaway.Domain.Camper", null)
                        .WithMany()
                        .HasForeignKey("CamperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampSleepaway.Domain.NextOfKin", null)
                        .WithMany()
                        .HasForeignKey("NextOfKinId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
